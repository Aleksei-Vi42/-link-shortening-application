package.json

.инициализация\ npm init
.инсталируем дом роуты\ react-router-dom
.добавляем скрипты
.добавляем зависимости и dev зависимости
.добавляем cross-env для переменных окружения на разных платфорамах\npm install --save-dev cross-env
.и добавляем его дял продакшена и разработки  start: "cross-env NODE_ENV=production"
                                              dev: "cross-env NODE_ENV=development"
.добавляем свой .gitignore в корневую папку
.в конце разработки собираем клиент командой  "npm run client build"


"scripts": {
    "start": "cross-env NODE_ENV=production node app.js",//запуск входного файла
    "server": "nodemon app.js",//для автоперезагрузки сервера
    "client": "npm run start --prefix client",//старт клиента
    "client:install": "npm install --prefix client"//установка клиента
     "client:build": "npm run build --prefix client",//сборка клиента
    "dev": "cross-env NODE_ENV=development concurrently \"npm run server\" \"npm run client\""//старт клиент-сервер

for server:npm i
    Dependencies
    "react-router-dom": "^5.2.0"  //маршрутизация для одностраничных приложений
    "bcrypt":  //для хеширования пароля
    "cjs-module"://поддержка для модульной разработки
    "config"://
    "express"://основная библиотека для сервера
    "express-validator"://для валидации данных с клиента
    "jsonwebtoken": //токен безопастности
    "mongoose": //хранилище mongoDB
    "shortid": "^2.2.16" // библиотека для сокращения ссылок


  "devDependencies":npm i -D
    "concurrently": //одновременный запуск сервер-клиент
    "nodemon":// автоперезагрузка сервера


for client(REACT)

      npm create-react-app dir//создание проекта
      npm i//стандартные паки
      npm install materialize-css@next//некоторые встроенные в <> css стили
      npm react-router-dom//маршрутизация для одностраничных приложений

